session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$Academic_Yr <- as.factor(uc_admit$Academic_Yr)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 18) +
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Set3")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Set2")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red"
dashboardHeader(title = "University of California"),
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions from 2010-2019"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter.")
plotOutput("plot", width = "800px", height = "500px"))
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions from 2010-2019"),
dashboardSidebar(),
dashboardBody(),
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter."),
plotOutput("plot", width = "800px", height = "500px"))
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions from 2010-2019"),
dashboardSidebar(),
dashboardBody(),
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter.")
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions from 2010-2019"),
dashboardSidebar(),
dashboardBody(),
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter.")
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions 2010-2019"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
library(janitor)
library(stringr)
library(RColorBrewer)
uc_admit <- readr::read_csv("data/UC_admit.csv")
uc_admit <- clean_names(uc_admit)
uc_admit <- uc_admit %>%
mutate(perc_fc_dbl = str_replace(perc_fr, "%", "")) %>%
select(-perc_fr)
uc_admit$perc_fc_dbl <- as.numeric(uc_admit$perc_fc_dbl)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions 2010-2019"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
library(janitor)
library(stringr)
library(RColorBrewer)
runApp('HW 13 Question 2.R')
runApp('HW 13 Question 2.R')
runApp('HW 13 Question 1 .R')
knitr::opts_chunk$set(echo = TRUE)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
knitr::opts_chunk$set(echo = TRUE)
if (!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
uc_admit <- janitor::clean_names(UC_admit)
names(uc_admit)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions 2010-2019"),
dashboardSidebar(),
dashboardBody(
selectInput("y", "Select Filter", choices = c("academic_yr", "campus", "category"), selected = "campus"),
plotOutput("plot", width = "800px", height = "500px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "ethnicity", y = "filtered_count_fr", fill=input$y)) +
geom_col(position="dodge", alpha = 0.8, size=4)+
theme_light(base_size = 20) +
scale_fill_brewer(palette = "Paired")+
labs(title= "University of California Admissions Data 2010-2019", x="Ethnicity", y="Number of Admitted Freshmen", fill = "Legend")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions from 2010 - 2019",
titleWidth = 600),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission Criteria", choices = c("academic_yr", "campus", "category"),
selected = "academic_yr"),
selectInput("filter", "Select Ethnicity", choices = c("All", "African American", "American Indian", "Asian", "Chicano/Latino", "International", "White", "Unknown"), selected = "All"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter.")
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity == input$filter) %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill = "campus")) +
scale_fill_brewer(palette="Set3") +
geom_col(position = "dodge") +
theme_minimal(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "UC Admission Information from 2010-2019",x=NULL,y="Number of Admitted Freshmen")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="black",
dashboardHeader(title = "University of California Admissions from 2010-2019",
titleWidth = 600),
dashboardSidebar(disable = T),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(uc_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter." )
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(campus == input$campus) %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set3")+
theme_light(base_size = 20)+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information from 2010-2019",x=NULL,y="Number of Admitted Freshmen")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
uc_admit$academic_yr <- as.factor(uc_admit$academic_yr)
ui <- dashboardPage(skin="black",
dashboardHeader(title = "University of California Admissions from 2010-2019",
titleWidth = 600),
dashboardSidebar(disable = T),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(uc_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter." )
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(campus == input$campus) %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set3")+
theme_light(base_size = 20)+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information from 2010-2019",x=NULL,y="Number of Admitted Freshmen")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
runApp('homework/HW 13 Question 3.R')
library(tidyverse)
library(shiny)
library(shinydashboard)
UC_admit <- readr::read_csv("data/UC_admit.csv")
UC_admit <- readr::read_csv("data/UC_admit.csv")
uc_admit <- janitor::clean_names(UC_admit)
names(uc_admit)
ui <- dashboardPage(skin = "red",
dashboardHeader(title = "University of California Admissions from 2010 - 2019",
titleWidth = 600),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission Criteria", choices = c("academic_yr", "campus", "category"),
selected = "academic_yr"),
selectInput("filter", "Select Ethnicity", choices = c("All", "African American", "American Indian", "Asian", "Chicano/Latino", "International", "White", "Unknown"), selected = "All"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter.")
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(ethnicity == input$filter) %>%
ggplot(aes_string(x = input$x, y = "filtered_count_fr", fill = "campus")) +
scale_fill_brewer(palette="Set3") +
geom_col(position = "dodge") +
theme_minimal(base_size = 20) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "UC Admission Information from 2010-2019",x=NULL,y="Number of Admitted Freshmen")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="black",
dashboardHeader(title = "University of California Admissions from 2010-2019",
titleWidth = 600),
dashboardSidebar(disable = T),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(uc_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Reference: University of California Information Center, Admissions (2010-2019)
https://www.universityofcalifornia.edu/infocenter." )
),
box(width = 8,
plotOutput("plot", width = "800px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(campus == input$campus) %>%
filter(ethnicity!="All") %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set3")+
theme_light(base_size = 20)+
scale_x_continuous(breaks=seq(2010, 2019, by = 1))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information from 2010-2019",x=NULL,y="Number of Admitted Freshmen")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
